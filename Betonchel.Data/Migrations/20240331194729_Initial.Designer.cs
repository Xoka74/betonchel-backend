// <auto-generated />
using System;
using Betonchel.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Betonchel.Data.Migrations
{
    [DbContext(typeof(BetonchelContext))]
    [Migration("20240331194729_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.28")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Betonchel.Domain.Models.Application", b =>
                {
                    b.Property<int>("ApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ApplicationId"));

                    b.Property<DateTime>("ApplicationCreationDate")
                        .HasColumnType("timestamptz");

                    b.Property<int>("ConcreteId")
                        .HasColumnType("integer");

                    b.Property<int>("ConcretePumpId")
                        .HasColumnType("integer");

                    b.Property<string>("ContactDate")
                        .IsRequired()
                        .HasColumnType("json");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DeliveryAddress")
                        .IsRequired()
                        .HasColumnType("json");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("timestamptz");

                    b.Property<string>("ManagerName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("double precision");

                    b.Property<float>("Volume")
                        .HasColumnType("real");

                    b.HasKey("ApplicationId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("Betonchel.Domain.Models.ConcreteGrade", b =>
                {
                    b.Property<int>("ConcreteGradeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ConcreteGradeId"));

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("FrostResistanceId")
                        .HasColumnType("integer");

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("PricePerCubicMeter")
                        .HasColumnType("double precision");

                    b.Property<int>("WaterproofId")
                        .HasColumnType("integer");

                    b.HasKey("ConcreteGradeId");

                    b.ToTable("ConcreteGrades");
                });

            modelBuilder.Entity("Betonchel.Domain.Models.ConcretePump", b =>
                {
                    b.Property<int>("ConcretePumpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ConcretePumpId"));

                    b.Property<float>("MaximumCapacity")
                        .HasColumnType("real");

                    b.Property<float?>("PipeLength")
                        .HasColumnType("real");

                    b.Property<double>("PricePerHour")
                        .HasColumnType("double precision");

                    b.HasKey("ConcretePumpId");

                    b.ToTable("ConcretePumps");
                });

            modelBuilder.Entity("Betonchel.Domain.Models.FrostResistanceType", b =>
                {
                    b.Property<int>("FrostResistanceTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("FrostResistanceTypeId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(5)");

                    b.HasKey("FrostResistanceTypeId");

                    b.ToTable("FrostResistanceTypes");
                });

            modelBuilder.Entity("Betonchel.Domain.Models.WaterproofType", b =>
                {
                    b.Property<int>("WaterproofTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("WaterproofTypeId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(3)");

                    b.HasKey("WaterproofTypeId");

                    b.ToTable("WaterproofTypes");
                });
#pragma warning restore 612, 618
        }
    }
}
